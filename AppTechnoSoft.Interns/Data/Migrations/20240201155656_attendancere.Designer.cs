// <auto-generated />
using System;
using AppTechnoSoft.Interns.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppTechnoSoft.Interns.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240201155656_attendancere")]
    partial class attendancere
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5c0ec5ac-a549-4e0a-9167-e5eddec34667",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7bc7d4ad-094d-4fc4-a9ec-7353b740179a",
                            Email = "rawal.bishnu@live.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "RAWAL.BISHNU@LIVE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIDw5oHL8/iKJOCwOK4ItMVdd/HBPl56G8/divGzzZEX8FYjX/z3fcWFOPUyOwbPiw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8e73d296-c25e-42e9-8373-42adb679e287",
                            TwoFactorEnabled = false,
                            UserName = "rawal.bishnu@live.com"
                        });
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("PunchIn")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("PunchOut")
                        .HasColumnType("time");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkLog")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.College", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colleges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7921),
                            Location = "Bhadrapur, Jhapa",
                            Name = "Mechi Multiple Campus"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7941),
                            Location = "Dhankuta",
                            Name = "Dhankuta Multiple Campus"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7942),
                            Location = "Dharan",
                            Name = "Central Campus of Technology"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7943),
                            Location = "Biratnagar",
                            Name = "Mahendra Morang Adarsha Multiple Campus"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7944),
                            Location = "Rajbiraj",
                            Name = "Mahendra Bindeshwori Multiple Campus"
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7945),
                            Location = "Siraha",
                            Name = "Surya Narayan Satya Na. Mo. Yadav Campus"
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7946),
                            Location = "Janakpur",
                            Name = "Ramsorup Ramsagar Multiple Campus"
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7947),
                            Location = "Birgunj",
                            Name = "Thakur Ram Multiple Campus"
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7947),
                            Location = "Bharatpur",
                            Name = "Birendra Multiple Campus"
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7948),
                            Location = "Pokhara",
                            Name = "Prithivi Narayan Multiple Campus"
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7949),
                            Location = "Mahendranagar",
                            Name = "SidhaNath Science Campus"
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7950),
                            Location = "Nepalgunj",
                            Name = "Mahendra Multiple Campus"
                        },
                        new
                        {
                            Id = 13,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7950),
                            Location = "Butwal",
                            Name = "Butwal Multiple Campus"
                        },
                        new
                        {
                            Id = 14,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7951),
                            Location = "Palpa",
                            Name = "Tribhuvan Multiple Campus"
                        },
                        new
                        {
                            Id = 15,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7952),
                            Location = "Ghantaghar",
                            Name = "Tri-Chandra Multiple Campus"
                        },
                        new
                        {
                            Id = 16,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7953),
                            Location = "Lainchour",
                            Name = "Amrit Science Campus"
                        },
                        new
                        {
                            Id = 17,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7953),
                            Location = "Patan",
                            Name = "Patan Multiple Campus"
                        },
                        new
                        {
                            Id = 18,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7954),
                            Location = "Bhaktapur",
                            Name = "Bhaktapur Multiple Campus"
                        },
                        new
                        {
                            Id = 19,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7955),
                            Location = "Bagbazar",
                            Name = "Padma Kanya Multiple Campus"
                        },
                        new
                        {
                            Id = 20,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7956),
                            Location = "Ghorahi, Dang",
                            Name = "Mahendra Multiple Campus"
                        },
                        new
                        {
                            Id = 21,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7973),
                            Location = "Baglung",
                            Name = "Dhaulagiri Campus"
                        },
                        new
                        {
                            Id = 22,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7974),
                            Location = "Gorkha",
                            Name = "Gorkha Campus"
                        },
                        new
                        {
                            Id = 23,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7975),
                            Location = "Bhairahawa",
                            Name = "Bhairahawa Multiple Campus"
                        },
                        new
                        {
                            Id = 24,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(7976),
                            Location = "Biratnagar",
                            Name = "Degree Campus"
                        });
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.FinAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<float>("FeeAmount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PaidAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("FinAccounts");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Publish")
                        .HasColumnType("bit");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoardUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CollegeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DbExperience")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FormSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneralProgramming")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("TechProgramId")
                        .HasColumnType("int");

                    b.Property<int>("WebExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("FinAccountId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TechProgramId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.TechProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Affliation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechPrograms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Affliation = "TU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8277),
                            Name = "BCA"
                        },
                        new
                        {
                            Id = 2,
                            Affliation = "PU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8279),
                            Name = "BCA"
                        },
                        new
                        {
                            Id = 3,
                            Affliation = "TU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8280),
                            Name = "BIT"
                        },
                        new
                        {
                            Id = 4,
                            Affliation = "PU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8281),
                            Name = "BIT"
                        },
                        new
                        {
                            Id = 5,
                            Affliation = "TU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8282),
                            Name = "BIM"
                        },
                        new
                        {
                            Id = 6,
                            Affliation = "TU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8283),
                            Name = "BScIT"
                        },
                        new
                        {
                            Id = 7,
                            Affliation = "PU",
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8284),
                            Name = "BScIT"
                        });
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HtmlContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Widgets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8318),
                            CreatedBy = "Seed",
                            Description = "An display item in home page",
                            HtmlContent = "Welcome to AppTechnoSoft! An initiative for students and freshers.",
                            Title = "CarouselItem"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8321),
                            CreatedBy = "Seed",
                            Description = "An display item in home page",
                            HtmlContent = "Bridging the gap between academia and industry!",
                            Title = "CarouselItem"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8323),
                            CreatedBy = "Seed",
                            Description = "An display item in home page",
                            HtmlContent = "We guide you on software R&D and SDLC to kickstart your career!",
                            Title = "CarouselItem"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8325),
                            CreatedBy = "Seed",
                            Description = "An display item in home page",
                            HtmlContent = "Replacement Opportunities!",
                            Title = "CarouselItem"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8327),
                            CreatedBy = "Seed",
                            Description = "An display item in home page",
                            HtmlContent = "From basics to professional touches!",
                            Title = "CarouselItem"
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8329),
                            CreatedBy = "Seed",
                            Description = "GIT and GitHub Essentials",
                            HtmlContent = "todo",
                            Title = "Module"
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2024, 2, 1, 21, 41, 55, 644, DateTimeKind.Local).AddTicks(8331),
                            CreatedBy = "Seed",
                            Description = "Training + Internship Combo",
                            HtmlContent = "todo",
                            Title = "HomeIntro"
                        });
                });

            modelBuilder.Entity("InstructorTag", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("InstructorId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("InstructorTag");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f8baa4f4-be74-4525-b67c-ea2eb15fd3c7",
                            ConcurrencyStamp = "f8baa4f4-be74-4525-b67c-ea2eb15fd3c7",
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "5a24c9cb-4ff7-4ad4-b2e1-b5aa351db4ee",
                            ConcurrencyStamp = "5a24c9cb-4ff7-4ad4-b2e1-b5aa351db4ee",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "4917ba55-af39-40a3-88b4-471a13ab679c",
                            ConcurrencyStamp = "4917ba55-af39-40a3-88b4-471a13ab679c",
                            Name = "Trainee",
                            NormalizedName = "TRAINEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "5c0ec5ac-a549-4e0a-9167-e5eddec34667",
                            RoleId = "f8baa4f4-be74-4525-b67c-ea2eb15fd3c7"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("TagWidget", b =>
                {
                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetsId")
                        .HasColumnType("int");

                    b.HasKey("TagsId", "WidgetsId");

                    b.HasIndex("WidgetsId");

                    b.ToTable("TagWidget");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Attendance", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Student", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.FinAccount", "FinAccount")
                        .WithMany()
                        .HasForeignKey("FinAccountId");

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.TechProgram", "TechProgram")
                        .WithMany()
                        .HasForeignKey("TechProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("FinAccount");

                    b.Navigation("Team");

                    b.Navigation("TechProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppTechnoSoft.Interns.Data.Models.Team", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("BatchId");

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("Batch");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("InstructorTag", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TagWidget", b =>
                {
                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppTechnoSoft.Interns.Data.Models.Widget", null)
                        .WithMany()
                        .HasForeignKey("WidgetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
