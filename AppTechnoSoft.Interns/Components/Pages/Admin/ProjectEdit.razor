@page "/add-project"
@page "/edit-project/{Id:int}"

@inject ApplicationDbContext Db
@inject ISnackbar SnackBar

<PageTitle>@pageTitle</PageTitle>

    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <MudTextField Label="Title" @bind-Value="model.Title" />
        <MudTextField Label="RepoUrl" Class="mt-3" @bind-Value="model.RepoUrl" />
        <MudTextField Label="BoardUrl" Class="mt-3 mb-5" @bind-Value="model.BoardUrl" />
        <MudText Class="mb-1" Typo="Typo.body1">Project Requirements</MudText>
        <BlazoredTextEditor @ref="@QuillHtml" EditorCssStyle="height:350px;font-size:16px;" Placeholder="Project Requirements...">
        <ToolbarContent>
            <span class="ql-formats">
                <select class="ql-font">
                    <option selected=""></option>
                    <option value="serif"></option>
                    <option value="monospace"></option>
                </select>
                <select class="ql-header">
                    <option value="1"></option>
                    <option selected value="2"></option>
                    <option value="3"></option>
                    <option value="4"></option>
                    <option value="5"></option>
                </select>
                <select class="ql-size">
                    <option value="small"></option>
                    <option selected></option>
                    <option value="large"></option>
                    <option value="huge"></option>
                </select>
            </span>
            <span class="ql-formats">
                <button class="ql-bold"></button>
                <button class="ql-italic"></button>
                <button class="ql-underline"></button>
                <button class="ql-strike"></button>
            </span>
            <span class="ql-formats">
                <select class="ql-color"></select>
                <select class="ql-background"></select>
            </span>
            <span class="ql-formats">
                <button class="ql-list" value="ordered"></button>
                <button class="ql-list" value="bullet"></button>
                <button class="ql-indent" value="+1"></button>
                <button class="ql-indent" value="-1"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-blockquote"></button>
                <button class="ql-code-block"></button>
                <button class="ql-script" value="sub"></button>
                <button class="ql-script" value="super"></button>
                <button class="ql-link"></button>
            </span>
        </ToolbarContent>
        <EditorContent>@((MarkupString)model.Requirements)</EditorContent>
    </BlazoredTextEditor>

    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-3" StartIcon="@Icons.Material.Filled.Save">
        Save Project
    </MudButton>
</EditForm>

    @code {

    [Parameter]
    public int? Id { get; set; }

    BlazoredTextEditor QuillHtml;
    Project model = new();
    string pageTitle;
    bool IsAdd => Id is null or 0;

    protected override async Task OnInitializedAsync()
    {        
        if (IsAdd)
        {
            pageTitle = "Add Project";
        }
        else
        {
            pageTitle = "Edit Project";
            model = await Db.Projects.FirstAsync(x => x.Id == Id);
        }
    }

    private async Task OnValidSubmit(EditContext context)
    {
        var requirements = await QuillHtml.GetHTML();

        if (requirements is null or "")
        {
            return;
        }

        model.Requirements = requirements;

        if (IsAdd)
        {
            Db.Projects.Add(model);
        }
        else
        {
            model.Id = Id.Value;
            Db.Projects.Update(model);
        }

        var rowsAffected = await Db.SaveChangesAsync();

        if (rowsAffected > 0)
        {
            SnackBar.Add("Widget saved successfully", Severity.Success);
        }
        else
        {
            SnackBar.Add("Widget save failed", Severity.Error);
        }
    }
}
