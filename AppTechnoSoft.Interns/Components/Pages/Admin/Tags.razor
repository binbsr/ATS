@page "/tags"
@attribute [Authorize(Roles = Role.Admins)]
@inject ApplicationDbContext Db
@inject ISnackbar SnackBar

<PageTitle>Tags</PageTitle>

<MudTable Items="@tags" Dense Hover Filter="new Func<Tag, bool>(FilterFunc1)" @bind-SelectedItem="selectedTag" Loading="@loadingData">
    <ToolBarContent>
        <MudFab Href="/add-tag" StartIcon="@Icons.Material.Filled.Add" Title="Add New Tag" Size="Size.Small" Color="Color.Tertiary"></MudFab>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium"
                      Class="mt-0">
        </MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>#</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Color Code</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="#">@(tags.IndexOf(context) + 1)</MudTd>
        <MudTd DataLabel="Name"><MudChip Style="@("background:" + context.ColorCode ?? "")" Class="text-white" Size="Size.Small">@context.Name</MudChip></MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="ColorCode">@context.ColorCode</MudTd>
        <MudTd>
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Color="Color.Warning" Href="@("/edit-tag/" + context.Id)" />
            <MudIconButton Icon="@Icons.Material.Sharp.Delete" Size="Size.Small" Color="Color.Error" OnClick="() => ConfirmDelete(context)" />
            <MudMessageBox @ref="mbox" Title="Warning" CancelText="Cancel">
                <MessageContent>
                    Are you sure to delete this tag? It can't be undone!
                </MessageContent>
                <YesButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Error" Class="ml-2 mb-2 mr-3" StartIcon="@Icons.Material.Filled.DeleteForever">Delete</MudButton>
                </YesButton>
            </MudMessageBox>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="@([20, 50, 100])" />
    </PagerContent>
</MudTable>

@code {

    private List<Tag> tags = new();
    private Tag selectedTag = new();
    private bool loadingData;
    private string searchString = "";
    MudMessageBox mbox { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        loadingData = true;
        tags = await Db.Tags.ToListAsync();
        loadingData = false;
    }

    private bool FilterFunc1(Tag tag) => FilterFunc(tag, searchString);

    private bool FilterFunc(Tag tag, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (tag.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

    private async Task ConfirmDelete(Tag tag)
    {
        bool? result = await mbox.Show();
        if (result == null)
            return;

        Db.Tags.Remove(tag);

        var rowsAffected = await Db.SaveChangesAsync();

        if (rowsAffected > 0)
        {
            SnackBar.Add("Tag Deleted successfully", Severity.Success);
            tags.Remove(tag);
        }
        else
        {
            SnackBar.Add("Tag Delete failed", Severity.Error);
        }
    }
}
