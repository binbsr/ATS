@page "/colleges"
@attribute [StreamRendering]

@inject ApplicationDbContext db
@inject ISnackbar SnackBar

<MudDataGrid T="College"
    MultiSelection="true" 
    Items="@CollegeList" 
    SortMode="SortMode.Multiple" 
    Filterable="true" 
    Hover="true"
    QuickFilter="@_quickFilter"
    Loading="loadingData"
    Hideable="true"
    Dense="true">
    
    <ToolBarContent>
        <MudFab Href="/add-college" StartIcon="@Icons.Material.Filled.Add" Title="Add New College" Size="Size.Small" Color="Color.Tertiary"></MudFab>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => CollegeList.IndexOf(x) + 1" Title="#" Filterable="false"/>
        <PropertyColumn Property="x => x.Name" SortBy="@_sortBy" />
        <PropertyColumn Property="x => x.Location" />
        <TemplateColumn Filterable="false" CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Color="Color.Warning" Href="@("/edit-college/" + context.Item.Id)" />
                <MudIconButton Icon="@Icons.Material.Sharp.Delete" Size="Size.Small" Color="Color.Error" OnClick="() => ConfirmDelete(context.Item)" />
                    <MudMessageBox @ref="mbox" Title="Warning" CancelText="Cancel">
                        <MessageContent>
                            Are you sure to delete this college? It can't be undone!
                        </MessageContent>
                        <YesButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.DeleteForever">Delete!</MudButton>
                        </YesButton>
                    </MudMessageBox>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="College" PageSizeOptions="[15, 30, 50, 100, 200]"/>
    </PagerContent>
</MudDataGrid>

@code {
    private List<College> CollegeList = new List<College>();
    private string _searchString;
    private bool _sortNameByLength;
    private bool loadingData = false;
    MudMessageBox mbox { get; set; }

    private Func<College, object> _sortBy => x =>
    {
        if (_sortNameByLength)
            return x.Name.Length;
        else
            return x.Name;
    };

    private Func<College, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (x.Name.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (x.Location.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    protected override async Task OnInitializedAsync()
    {
        loadingData = true;
        CollegeList = await db.Colleges.ToListAsync();
        loadingData = false;
    }

    private async Task ConfirmDelete(College college)
    {
        bool? result = await mbox.Show();
        if (result == null)
            return;

        db.Colleges.Remove(college);

        var rowsAffected = await db.SaveChangesAsync();

        if (rowsAffected > 0)
        {
            SnackBar.Add("College Deleted successfully", Severity.Success);
            CollegeList.Remove(college);
        }
        else
        {
            SnackBar.Add("College Delete failed", Severity.Error);
        }
    }
}