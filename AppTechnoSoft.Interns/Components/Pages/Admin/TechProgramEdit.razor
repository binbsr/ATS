@page "/add-program"
@page "/edit-program/{Id:int}"

@inject ApplicationDbContext Db
@inject ISnackbar SnackBar
@inject NavigationManager Navigation

<PageTitle>@pageTitle</PageTitle>

    <MudContainer>
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">

            <MudTextField Label="Program" @bind-Value="model.Name" Variant="Variant.Outlined" />
            <MudTextField Label="Affliation" Class="mt-3" @bind-Value="model.Affliation" Variant="Variant.Outlined" />

            <MudButton ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       Class="mt-3"
                       StartIcon="@Icons.Material.Filled.Save">
                Save Program
            </MudButton>
        </EditForm>
    </MudContainer>

    @code {

    [Parameter]
    public int? Id { get; set; }

    TechProgram model = new();
    string pageTitle = string.Empty;
    bool IsAdd => Id is null or 0;

    protected override async Task OnInitializedAsync()
    {
        if (IsAdd)
        {
            pageTitle = "Add Program";
        }
        else
        {
            pageTitle = "Edit Program";
            model = await Db.TechPrograms.FindAsync(Id) ?? new();
        }
    }

    private async Task OnValidSubmit(EditContext context)
    {
        if (IsAdd)
        {
            Db.TechPrograms.Add(model);
        }
        else
        {
            model.Id = Id!.Value;
            Db.TechPrograms.Update(model);
        }

        var rowsAffected = await Db.SaveChangesAsync();

        if (rowsAffected > 0)
        {
            SnackBar.Add("Program saved successfully", Severity.Success);
        }
        else
        {
            SnackBar.Add("Program save failed", Severity.Error);
        }

        Navigation.NavigateTo("/programs");
    }
}
